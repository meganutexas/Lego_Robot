use Libraries.Compute.Affine2
use Libraries.Compute.Math

class Affine2SetToRotation 
    action Main
        Affine2 affine

        affine:SetToRotation(45)

        number row0column0 = affine:row0column0
        number row0column1 = affine:row0column1
        number row0column2 = affine:row0column2
        number row1column0 = affine:row1column0
        number row1column1 = affine:row1column1
        number row1column2 = affine:row1column2

        output "The affine is: "
        output "|" + row0column0 + ", " + row0column1 + ", " + row0column2 + "|"
        output "|" + row1column0 + ", " + row1column1 + ", " + row1column2 + "|"
        output "|0, 0, 1|"

        Math math

        affine:SetToRotationRadians(math:pi / 4)

        row0column0 = affine:row0column0
        row0column1 = affine:row0column1
        row0column2 = affine:row0column2
        row1column0 = affine:row1column0
        row1column1 = affine:row1column1
        row1column2 = affine:row1column2

        output "The affine is: "
        output "|" + row0column0 + ", " + row0column1 + ", " + row0column2 + "|"
        output "|" + row1column0 + ", " + row1column1 + ", " + row1column2 + "|"
        output "|0, 0, 1|"

        affine:SetToRotation(math:SquareRoot(2) / 2, math:SquareRoot(2) / 2)

        row0column0 = affine:row0column0
        row0column1 = affine:row0column1
        row0column2 = affine:row0column2
        row1column0 = affine:row1column0
        row1column1 = affine:row1column1
        row1column2 = affine:row1column2

        output "The affine is: "
        output "|" + row0column0 + ", " + row0column1 + ", " + row0column2 + "|"
        output "|" + row1column0 + ", " + row1column1 + ", " + row1column2 + "|"
        output "|0, 0, 1|"        
    end
end