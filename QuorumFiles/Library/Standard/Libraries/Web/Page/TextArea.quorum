package Libraries.Web.Page

use Libraries.Web.Page.WebTag
use Libraries.Web.Page.Attribute
use Libraries.Web.Page.Attributes

/*
The TextArea class represents HTML's (Hypertext Markup Language) textarea tag 
which is a multi-line text input box that is capable of containing 
an unlimited number of caracters. 
You can find more information about this tag at:
<a href="http://www.w3schools.com/tags/tag_textarea.asp">The textarea attribute</a>.

Attribute: Example

use Libraries.Web.Page.all
class Main
   action main
      //make a web page
      WebPage page
      //add a TextArea
      TextArea myTextArea
      page:AddToBody(myTextArea)
   end
end
*/
class TextArea is WebTag, FlowContent
    constant text autofocus = "autofocus"
    constant text width = "cols"
    constant text disabled = "disabled"
    constant text formName = "form"
    constant text maxLength = "maxlength"
    constant text name = "name"
    constant text placeHolder = "placeholder"
    constant text readOnly = "readonly"
    constant text required = "required"
    constant text height = "rows"
    constant text textWrap = "wrap"
    
    /*
        This action gets the autofocus Attribute. The autofocus attribute 
        tells the TextArea whether or not it will get focus when a webPage is
        loaded.

        Attribute: Returns True if autofocus is enabled or false if it is disabled. 

        Attribute: Example
        use Libraries.Web.Page.TextArea
        use Libraries.Web.Page.Attribute

        TextArea myTextArea
        boolean isAutofocusOn = myTextArea:GetAutofocus()
        
    */
    action GetAutofocus returns boolean
        Attribute autofocus = GetAttribute(me:autofocus)
        return autofocus:GetValue() = me:autofocus
    end

    /*
        This action sets the autofocus Attribute. The autofocus attribute 
        tells the TextArea whether or not it will get focus when a webPage is
        loaded.

        Attribute: Parameter value The autofocus is enable with a value of true or is not enabled with a value of false. 

        Attribute: Example
        use Libraries.Web.Page.TextArea
        use Libraries.Web.Page.Attribute

        TextArea myTextArea
        myTextArea:SetAutofocus(true)
        
    */
    action SetAutofocus(boolean value)
        if value
            AddAttribute(autofocus, autofocus)
        else
            RemoveAttribute(autofocus)
        end
    end
    
    /*
        This action gets the width of the textarea. The width attribute 
        defines the width of the TextArea in columns. It corresponds to the
        following html attribute: <textarea cols="10"> and defaults to a value 
        of 20.

        Attribute: Returns The width of the text area. 

        Attribute: Example
        use Libraries.Web.Page.TextArea
        use Libraries.Web.Page.Attribute

        TextArea myTextArea
        integer width = myTextArea:GetWidth()
        
    */
    action GetWidth returns integer
        Attribute width = GetAttribute(me:width)
        if width = undefined
            return 20
        else
            return cast(integer, width:GetValue())
        end
    end

    /*
        This action sets the width Attribute. The width is the width of the
        TextArea and it is defaulted to a value of 20.

        Attribute: Parameter value The width of the textarea. 

        Attribute: Example
        use Libraries.Web.Page.TextArea
        use Libraries.Web.Page.Attribute

        TextArea myTextArea
        myTextArea:SetWidth(25)
        
    */
    action SetWidth(integer value)
        AddAttribute(me:width, "" + value)
    end

    /*
        This action gets the disabled attribute of the textarea. If false is
        returned the textarea is enabled and if true is returned it is disabled.

        Attribute: Returns True if the textarea is disabled and false if it not. 

        Attribute: Example
        use Libraries.Web.Page.TextArea
        use Libraries.Web.Page.Attribute

        TextArea myTextArea
        boolean disabled = myTextArea:GetDisabled()
        
    */
    action GetDisabled returns boolean
        Attribute disable = GetAttribute(me:disabled)
        if disable = undefined
            return false
        else
            return disable:GetValue() = me:disabled
        end
    end
    
    /*
        This action sets the disabled attribute of the textarea. The value of true
        will disable the textarea and false will enable the textarea.

        Attribute: Parameter value True if the textarea is disabled and false if it not. 

        Attribute: Example
        use Libraries.Web.Page.TextArea
        use Libraries.Web.Page.Attribute

        TextArea myTextArea
        myTextArea:SetDisabled(true)
        
    */
    action SetDisabled (boolean value)
        if value
            AddAttribute(disabled, disabled)
        else
            RemoveAttribute(disabled)
        end
    end
 
    /*
        This action gets the formName attribute of the TextArea. The name of the 
        formName is stored as the value in the attribute.

        Attribute: Returns The formName attribute. 

        Attribute: Example
        use Libraries.Web.Page.TextArea
        use Libraries.Web.Page.Attribute

        TextArea myTextArea
        Attribute formName = myTextArea:GetFormName()            
    */
    action GetFormName returns Attribute
        return me:GetAttribute(formName)
    end

    /*
        This action sets the form attribute of the textarea. The value of formName 
        attribute should map to a defined form name.

        Attribute: Parameter value Name of the form. 

        Attribute: Example
        use Libraries.Web.Page.TextArea
        use Libraries.Web.Page.Attribute

        TextArea myTextArea
        myTextArea:SetFormName("myForm")
        
    */
    action SetFormName(text value)
        AddAttribute(formName,value)
    end
    
    /*
        This action gets the max length attribute of the textarea. The max 
        length of the form the text area is stored as the value in the attribute.

        Attribute: Returns The max length of the characters in the text area. 

        Attribute: Example
        use Libraries.Web.Page.TextArea
        use Libraries.Web.Page.Attribute

        TextArea myTextArea
        Attribute max = myTextArea:GetMaxLength()
            
    */
    action GetMaxLength returns Attribute
        return me:GetAttribute(maxLength)
    end

    /*
        This action sets the max length attribute of the textarea. The max length
        is the max number of characters that the text area will hold.

        Attribute: Parameter value The max length of characters in the text area. 

        Attribute: Example
        use Libraries.Web.Page.TextArea
        use Libraries.Web.Page.Attribute

        TextArea myTextArea
        myTextArea:SetMaxLength(150)
        
    */
    action SetMaxLength(integer value)
        AddAttribute(maxLength, "" + value)
    end
    
    /*
        This action gets the name attribute of the textarea. The name of the 
        the text area is stored as the value in the attribute.

        Attribute: Returns The name attribute. 

        Attribute: Example
        use Libraries.Web.Page.TextArea
        use Libraries.Web.Page.Attribute

        TextArea myTextArea
        Attribute textAreaName = myTextArea:GetName()            
    */
    action GetName returns Attribute
        return me:GetAttribute(name)
    end

    /*
        This action sets the name attribute of the textarea. The name variable
        sets the name of the textarea.

        Attribute: Parameter value The name of the text area. 

        Attribute: Example
        use Libraries.Web.Page.TextArea
        use Libraries.Web.Page.Attribute

        TextArea myTextArea
        myTextArea:SetName("myTextArea")
        
    */
    action SetName(text value)
        AddAttribute(name,value)
    end
    
    /*
        This action gets the placeholder attribute of the textarea. The placeholder
        is the description of what should be placed in the text area. This placeholder
        text is displayed in the text area.

        Attribute: Returns The placeholder attribute. 

        Attribute: Example
        use Libraries.Web.Page.TextArea
        use Libraries.Web.Page.Attribute

        TextArea myTextArea
        Attribute placeHolder = myTextArea:GetPlaceHolder()
    */
    action GetPlaceHolder returns Attribute
        return me:GetAttribute(placeHolder)
    end

    /*
        This action sets the placeholder attribute of the textarea. The placeholder
        is the description of what should be placed in the text area. This placeholder
        text is displayed in the text area.

        Attribute: Parameter value The placeholder text in the text area. 

        Attribute: Example
        use Libraries.Web.Page.TextArea
        use Libraries.Web.Page.Attribute

        TextArea myTextArea
        myTextArea:SetPlaceHolder("Enter your full name...")
        
    */
    action SetPlaceHolder(text value)
        AddAttribute(placeHolder,value)
    end
    
    /*
        This action gets the read-only attribute of the textarea. If the textarea
        is readonly then the textarea does not allow text to be written to the 
        textarea.

        Attribute: Returns True if the textarea is read-only and false if it is not. 

        Attribute: Example
        use Libraries.Web.Page.TextArea
        use Libraries.Web.Page.Attribute

        TextArea myTextArea
        boolean readOnly = myTextArea:GetReadOnly()
            
    */
    action GetReadOnly returns boolean
        Attribute readOnly = GetAttribute(me:readOnly)
        if readOnly = undefined
            return false
        else
            return true
        end
    end

    /*
        This action sets the read-only attribute of the textarea. If the textarea
        is readonly then the textarea does not allow text to be written to the 
        textarea.

        Attribute: Parameter value True if the textarea is read-only and false if it is not. 

        Attribute: Example
        use Libraries.Web.Page.TextArea
        use Libraries.Web.Page.Attribute

        TextArea myTextArea
        myTextArea:SetReadOnly(true)
        
    */
    action SetReadOnly(boolean value)
        if value
            AddAttribute(readOnly, readOnly)
        else
            RemoveAttribute(readOnly)
        end
    end
    
    /*
        This action gets the require attribute of the textarea. If the textarea
        is required the value true will be returned and false if it is not required.
        Required means the textarea must be filled out.

        Attribute: Returns True if the textarea is required and false if it is not. 

        Attribute: Example
        use Libraries.Web.Page.TextArea
        use Libraries.Web.Page.Attribute

        TextArea myTextArea
        boolean required = myTextArea:GetRequired()
            
    */
    action GetRequired returns boolean
        Attribute required = GetAttribute(me:required)
        if required = undefined
            return false
        else
            return required:GetValue() = me:required
        end
    end

    /*
        This action sets the required attribute of the textarea. If the textarea
        is required (true) then the textarea must be filled out.

        Attribute: Parameter value True if the textarea is required and false if it is not. 

        Attribute: Example
        use Libraries.Web.Page.TextArea
        use Libraries.Web.Page.Attribute

        TextArea myTextArea
        myTextArea:SetRequired(true)
        
    */
    action SetRequired(boolean value)
        if value
            AddAttribute(required,required)
        else
            RemoveAttribute(required)
        end
    end
    
    /*
        This action gets the height attribute of the textarea. This attribute
        specifies the height in lines of the textarea. The default value is 2
        lines.

        Attribute: Returns The height of the textarea. 

        Attribute: Example
        use Libraries.Web.Page.TextArea
        use Libraries.Web.Page.Attribute

        TextArea myTextArea
        Attribute height = myTextArea:GetHeight()
    */
    action GetHeight returns Attribute
        return me:GetAttribute(height)
    end

    /*
        This action sets the required attribute of the textarea. This attribute
        specifies the height in lines of the textarea. The default value is 2
        lines.

        Attribute: Parameter value The height in lines of the text area. 

        Attribute: Example
        use Libraries.Web.Page.TextArea
        use Libraries.Web.Page.Attribute

        TextArea myTextArea
        myTextArea:SetHeight(5)
        
    */
    action SetHeight(integer value)
        AddAttribute(height, "" + value)
    end
    
     /*
        This action gets the text wrap attribute of the textarea. There are two
        types of text wrap that can be specified, "hard" or "soft". A soft wrap
        means the text is not wrapped in the text area(this is the default). A
        hard wrap means the text will be wrapped (contains newlines) and a width
        must be specifed in this case.

        Attribute: Parameter value Hard or soft wrap (default:soft). 

        Attribute: Example
        use Libraries.Web.Page.TextArea
        use Libraries.Web.Page.Attribute

        TextArea myTextArea
        Attribute wrap = myTextArea:GetTextWrap()
        
    */
    action GetTextWrap returns Attribute
        return me:GetAttribute(textWrap)
    end

    /*
        This action sets the text wrap attribute of the textarea. There are two
        types of text wrap that can be specified, "hard" or "soft". A soft wrap
        means the text is not wrapped in the text area(this is the default). A
        hard wrap means the text will be wrapped (contains newlines) and a width
        must be specifed in this case.

        Attribute: Parameter value Hard or soft wrap (default:soft). 

        Attribute: Example
        use Libraries.Web.Page.TextArea
        use Libraries.Web.Page.Attribute

        TextArea myTextArea
        myTextArea:SetTextWrap(true)
        
    */
    action SetTextWrap(text value)
        AddAttribute(textWrap,value)
    end

    action Generate returns text
        text result = "<textarea " 
        Attributes attributes = parent:WebTag:GetAttributes()
        attributeText = attributes:Generate()
        result = result + attributeText + ">"
        result = result + me:GenerateNestedTags()
        result = result + "</textarea>"
        return result
    end

    /*
    This action places a Link object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            Link link
            page:Add(link)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(Link content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places a Abbreviation object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            Abbreviation abbreviation
            page:Add(abbreviation)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(Abbreviation content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places an Area object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            Area area
            page:Add(area)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(Area content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places an Audio object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            Audio audio
            page:Add(audio)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(Audio content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places a Bold object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            Bold bold
            page:Add(bold)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(Bold content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places a BiDirectionalIsolation object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            BiDirectionalIsolation biDirectionalIsolation
            page:Add(biDirectionalIsolation)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(BiDirectionalIsolation content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places a BiDirectionalOverride object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            BiDirectionalOverride biDirectionalOverride
            page:Add(biDirectionalOverride)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(BiDirectionalOverride content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places a LineBreak object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            LineBreak lineBreak
            page:Add(lineBreak)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(LineBreak content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places a Button object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            Button button
            page:Add(button)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(Button content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places a Canvas object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            Canvas canvas
            page:Add(canvas)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(Canvas content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places a Cite object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            Cite cite
            page:Add(cite)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(Cite content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places a CodeBlock object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            CodeBlock codeBlock
            page:Add(codeBlock)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(CodeBlock content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places a ListOptions object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            ListOptions listOptions
            page:Add(listOptions)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(ListOptions content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places a Deleted object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            Deleted deleted
            page:Add(deleted)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(Deleted content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places a DefinitionTerm object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            DefinitionTerm definitionTerm
            page:Add(definitionTerm)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(DefinitionTerm content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places an Emphasize object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            Emphasize emphasize
            page:Add(emphasize)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(Emphasize content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places an Embed object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            Embed embed
            page:Add(embed)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(Embed content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places an Italic object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            Italic italic
            page:Add(italic)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(Italic content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places an InlineFrame object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            InlineFrame inlineFrame
            page:Add(inlineFrame)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(InlineFrame content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places an Image object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            Image image
            page:Add(image)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(Image content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places an Input object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            Input input
            page:Add(input)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(Input content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places an Inserted object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            Inserted inserted
            page:Add(inserted)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(Inserted content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places a KeyboardInput object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            KeyboardInput keyboardInput
            page:Add(keyboardInput)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(KeyboardInput content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places a KeyGenerator object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            KeyGenerator keyGenerator
            page:Add(keyGenerator)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(KeyGenerator content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places a Label object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            Label label
            page:Add(label)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(Label content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places a Option object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            Option option
            page:Add(option)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(Option content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places an ImageMap object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            ImageMap imageMap
            page:Add(imageMap)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(ImageMap content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places a Highlight object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            Highlight highlight
            page:Add(highlight)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(Highlight content)
        parent:WebTag:tags:Add(content)
    end

    //math - missing

    /*
    This action places a MetaData object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            MetaData metaData
            page:Add(metaData)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(MetaData content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places a PerformanceGauge object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            PerformanceGauge performanceGauge
            page:Add(performanceGauge)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(PerformanceGauge content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places a NoScript object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            NoScript noScript
            page:Add(noScript)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(NoScript content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places an EmbedContent object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            EmbedContent embedContent
            page:Add(embedContent)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(EmbedContent content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places a Result object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            Result result
            page:Add(result)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(Result result)
        parent:WebTag:tags:Add(result)
    end

    /*
    This action places a ProgressBar object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            ProgressBar progressBar
            page:Add(progressBar)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(ProgressBar content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places a Quote object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            Quote quote
            page:Add(quote)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(Quote content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places a Ruby object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            Ruby ruby
            page:Add(ruby)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(Ruby content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places a StrikeThrough object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            StrikeThrough strikeThrough
            page:Add(strikeThrough)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(StrikeThrough content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places a SampleOutput object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            SampleOutput sampleOutput
            page:Add(sampleOutput)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(SampleOutput content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places a Script object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            Script script
            page:Add(script)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(Script content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places a Select object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            Select select
            page:Add(select)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(Select content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places a SmallText object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            SmallText smallText
            page:Add(smallText)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(SmallText content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places a Span object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            Span span
            page:Add(span)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(Span content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places a StrongText object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            StrongText strongText
            page:Add(strongText)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(StrongText content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places a SubscriptText object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            SubscriptText subscriptText
            page:Add(subscriptText)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(SubscriptText content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places a SuperscriptText object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            SuperscriptText superscriptText
            page:Add(superscriptText)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(SuperscriptText content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places a HiddenContent object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            HiddenContent hiddenContent
            page:Add(hiddenContent)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(HiddenContent content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places a TextArea object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            TextArea textArea
            page:Add(textArea)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(TextArea content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places a Time object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            Time time
            page:Add(time)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(Time content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places an UnderlineText object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            UnderlineText underlineText
            page:Add(underlineText)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(UnderlineText content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places a Variable object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            Variable variable
            page:Add(variable)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(Variable content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places a Video object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            Video video
            page:Add(video)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(Video content)
        parent:WebTag:tags:Add(content)
    end

    /*
    This action places a WordBreak object inside of a TextArea object.

    Attribute: Parameter content specifies what will be added to the page.

    Attribute: Example
    use Libraries.Web.Page.all

    class Main
        action Main
            WebPage page
            

            WordBreak wordBreak
            page:Add(wordBreak)

            text value = page:Generate()
            output value
        end
    end
    */
    action Add(WordBreak content)
        parent:WebTag:tags:Add(content)
    end

end