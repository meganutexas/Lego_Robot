package Libraries.Game

use Libraries.Sound.Audio
use Libraries.Interface.Item3D
use Libraries.System.File
use Libraries.Compute.Vector3

class Audio3D is Item3D, Audio

    /*
    These variables are used to determine how quickly the Audio3D is moving, in
    order to calculate the Audio velocity. At the beginning of each Update,
    these will contain the position of the Audio during the last Update.
    */
    number oldX = 0
    number oldY = 0
    number oldZ = 0
    number oldSeconds = 0

    /*
    This action will update the Audio3D, ensuring that its velocity is
    calculated for use in Doppler shift simulation (if it is enabled). Classes
    that override the Update action should make sure to call the parent action!
    */
    action Update(number seconds)
        if IsDopplerEnabled() and (oldX not= GetGlobalX() or oldY not= GetGlobalY() or oldZ not= GetGlobalZ())
            number difX = (GetGlobalX() - oldX) / oldSeconds
            number difY = (GetGlobalY() - oldY) / oldSeconds
            number difZ = (GetGlobalZ() - oldZ) / oldSeconds

            SetVelocity(difX, difY, difZ)

            oldX = GetGlobalX()
            oldY = GetGlobalY()
            oldZ = GetGlobalZ()
            oldSeconds = seconds
        end
    end

    /*
    SetX will set the X coordinate of the Audio3D in 3D space.

    Attribute: Example

        use Libraries.Game.Audio3D
        Audio3D sound
        sound:SetX(35.0)
    */
    action SetX(number x)
        parent:Item3D:SetX(x)
    end

    /*
    SetY will set the Y coordinate of the Audio3D in 3D space.

    Attribute: Example

        use Libraries.Game.Audio3D
        Audio3D sound
        sound:SetY(35.0)
    */
    action SetY(number y)
        parent:Item3D:SetY(y)
    end

    /*
    SetZ will set the Z coordinate of the Audio3D in 3D space.

    Attribute: Example

        use Libraries.Game.Audio3D
        Audio3D sound
        sound:SetZ(35.0)
    */
    action SetZ(number z)
        parent:Item3D:SetZ(z)
    end

    /*
    SetPosition will set the X, Y, and Z coordinates of the Audio3D in 3D space.

    Attribute: Example

        use Libraries.Game.Audio3D

        Audio3D sound
        sound:SetPosition(50, 200, 35)
    */
    action SetPosition(number x, number y, number z)
        parent:Item3D:SetPosition(x, y, z)
    end

    /*
    SetPosition will set the X, Y, and Z coordinates of the Audio3D in 3D space.

    Attribute: Example

        use Libraries.Game.Audio3D
        use Libraries.Compute.Vector3
        Audio3D sound
        Vector3 vector
        vector:Set(50, 200, 35)
        sound:SetPosition(vector)
    */
    action SetPosition(Vector3 vector)
        parent:Item3D:SetPosition(vector)
    end

    /*
    GetX will return the X coordinate of this Audio3D in 3D space. Note that
    if this Audio3D has been added to an Item3D, then this coordinate is 
    relative to the parent item - to get the non-relative X coordinate, use the
    GetGlobalX() action instead.

    Attribute: Example

        use Libraries.Game.Audio3D

        Audio3D sound
        sound:SetX(50)
        number x = sound:GetX()
    */
    action GetX returns number
        return parent:Item3D:GetX()
    end

    /*
    GetY will return the Y coordinate of this Audio3D in 3D space. Note that
    if this Audio3D has been added to an Item3D, then this coordinate is 
    relative to the parent item - to get the non-relative Y coordinate, use the
    GetGlobalY() action instead.

    Attribute: Example

        use Libraries.Game.Audio3D

        Audio3D sound
        sound:SetY(50)
        number y = sound:GetY()
    */
    action GetY returns number
        return parent:Item3D:GetY()
    end

    /*
    GetZ will return the Z coordinate of this Audio3D in 3D space. Note that
    if this Audio3D has been added to an Item3D, then this coordinate is 
    relative to the parent item - to get the non-relative Z coordinate, use the
    GetGlobalZ() action instead.

    Attribute: Example

        use Libraries.Game.Audio3D

        Audio3D sound
        sound:SetZ(50)
        number z = sound:GeZX()
    */
    action GetZ returns number
        return parent:Item3D:GetZ()
    end

    /*
    GetPosition will return a Vector3 object containing the X, Y, and Z
    coordinates of this Audio3D object. Note that if this Audio3D has been
    added to an Item3D, then this coordinate is relative to the parent item -
    to get the non-relative coordinates, use the GetGlobalPosition() action
    instead.

    Attribute: Example

        use Libraries.Game.Audio3D
        use Libraries.Compute.Vector3

        Audio3D sound
        sound:SetX(50)
        Vector3 vector = sound:GetPosition()
    */
    action GetPosition returns Vector3
        return parent:Item3D:GetPosition()
    end

    /*
    MoveX will increase the X coordinate of this Audio3D by the given amount.

    Attribute: Example

        use Libraries.Game.Audio3D

        Audio3D sound
        sound:SetX(50)
        sound:MoveX(25)
    */
    action MoveX(number x)
        parent:Item3D:MoveX(x)
        UpdateAudioPosition()
    end

    /*
    MoveY will increase the Y coordinate of this Audio3D by the given amount.

    Attribute: Example

        use Libraries.Game.Audio3D

        Audio3D sound
        sound:SetY(50)
        sound:MoveY(25)
    */
    action MoveY(number y)
        parent:Item3D:MoveY(y)
        UpdateAudioPosition()
    end

    /*
    MoveZ will increase the Z coordinate of this Audio3D by the given amount.

    Attribute: Example

        use Libraries.Game.Audio3D

        Audio3D sound
        sound:SetZ(50)
        sound:MoveZ(25)
    */
    action MoveZ(number z)
        parent:Item3D:MoveZ(z)
        UpdateAudioPosition()
    end

    /*
    The Move action will increase the X, Y, and Z coordinates of this Audio3D by 
    the given amounts.

    Attribute: Example

        use Libraries.Game.Audio3D

        Audio3D sound
        sound:SetPosition(50, 25, 80)
        sound:Move(25, 15, -20)
    */
    action Move(number x, number y, number z)
        parent:Item3D:Move(x, y, z)
        UpdateAudioPosition()
    end

    /*
    The Move action will increase the X, Y, and Z coordinates of this Audio3D by 
    the values inside the given Vector3.

    Attribute: Example

        use Libraries.Game.Audio3D
        use Libraries.Compute.Vector3

        Audio3D sound
        Vector3 vector
        vector:Set(25, 15, -20)
        sound:SetPosition(50, 25, 80)
        sound:Move(vector)
    */
    action Move(Vector3 vector)
        parent:Item3D:Move(vector)
        UpdateAudioPosition()
    end
   
    /* 
    This action sets the X offset of the Item. The offset tells the Item
    where to relate its X position to. In other words, the X offset is where an
    X coordinate of 0 is for this Item. This is automatically set when using an
    action to add an Item to another Item.

    Attribute: Example

        use Libraries.Game.Audio3D
        Audio3D sound
        sound:SetOffsetX(100)
    */
    action SetOffsetX(number offsetX)
        parent:Item3D:SetOffsetX(offsetX)
        UpdateAudioPosition()
    end

    /* 
    This action sets the Y offset of the Item. The offset tells the Item
    where to relate its Y position to. In other words, the Y offset is where a
    Y coordinate of 0 is for this item. This is automatically set when using an
    action to add an Item to another Item.

    Attribute: Example

        use Libraries.Game.Audio3D
        Audio3D sound
        sound:SetOffsetY(75)
    */
    action SetOffsetY(number offsetY)
        parent:Item3D:SetOffsetY(offsetY)
        UpdateAudioPosition()
    end

    /*
    This action sets the Z offset of the Item. The offset tells the Item
    where to relate its Z position to. In other words, the Z offset is where a
    Z coordinate of 0 is for this item. This is automatically set when using an
    action to add an Item to another Item.

    Attribute: Example

        use Libraries.Game.Audio3D
        Audio3D sound
        sound:SetOffsetZ(75)
    */
    action SetOffsetZ(number offsetZ)
        parent:Item3D:SetOffsetZ(offsetZ)
        UpdateAudioPosition()
    end

    /* 
    This action sets the offsets of the Item. The offsets tell the Item
    where to relate its position to. In other words, the offsets determine where
    each coordinate of 0 is for this item. This is automatically set when using an
    action to add an Item to another Item.

    Attribute: Example

        use Libraries.Game.Audio3D
        Audio3D sound
        sound:SetOffset(75, 40, 35)
    */
    action SetOffset(number offsetX, number offsetY, number offsetZ)
        parent:Item3D:SetOffset(offsetX, offsetY, offsetZ)
        UpdateAudioPosition()
    end

    /* 
    This action sets the offsets of the item. The offsets tell the Item
    where to relate its position to. In other words, the offsets determine where
    each coordinate of 0 is for this item. This is automatically set when using an
    action to add an Item to another Item.

    Attribute: Example

        use Libraries.Game.Audio3D
        use Libraries.Compute.Vector3
        Audio3D sound
        Vector3 vector
        vector:Set(75, 40, 35)
        sound:SetOffset(vector)
    */
    action SetOffset(Vector3 vector)
        parent:Item3D:SetOffset(vector)
        UpdateAudioPosition()
    end

    /*
    This action is used to free up any additional memory that is being used by
    this Item for purposes such as graphics. Note that the Item class doesn't
    have any extra memory that needs to be released with this action, but some
    classes which inherit from Item, such as Libraries.Game.Graphics.Drawable,
    do.
    */
    action Dispose
        parent:Audio:Dispose()
    end
 
    /*
    Used to set the Audio's position in OpenAL to match the Item3D's global
    offsets.
    */
    private action UpdateAudioPosition
        parent:Audio:SetPosition(GetGlobalX(), GetGlobalY(), GetGlobalZ())
    end
end