package Libraries.Game.Graphics

use Libraries.Compute.Vector3
use Libraries.Compute.Math

class PerspectiveCamera is Camera

    number fieldOfView = 67

    private Vector3 calcVector

    /*
    This action will set the field of view of the camera to the given angle.
    The provided angle is assumed to be in degrees.
    */
    action SetFieldOfView(number angle)
        fieldOfView = angle
    end

    /*
    This action will return the field of view of the camera to the given angle.
    The field of view is measured in degrees.
    */
    action GetFieldOfView returns number
        return fieldOfView
    end

    /*
    Initializes the camera by giving an angle in degrees to represent the field
    of view, as well as the width and height for the camera to show in virtual
    space.
    */
    action Initialize(number field, number viewportWidth, number viewportHeight)
        fieldOfView = field
        SetWidth(viewportWidth)
        SetHeight(viewportHeight)
        Update()
    end

    /*
    This action recalculates the camera's position and data. This should be used
    after the camera has been manipulated in any way.
    */
    action Update
        Math math
        number aspect = GetWidth() / GetHeight()
        GetProjectionMatrix():SetToProjection(math:AbsoluteValue(GetNear()), math:AbsoluteValue(GetFar()), fieldOfView, aspect)
        GetViewMatrix():SetToLookAt(GetPosition(), calcVector:Set(GetPosition()):Add(GetDirection()), GetUp())
        GetCombinedMatrix():Set(GetProjectionMatrix())
        GetCombinedMatrix():Multiply(GetViewMatrix())

        GetInverseCombinedMatrix():Set(GetCombinedMatrix())
        GetInverseCombinedMatrix():Inverse()
        GetFrustum():Update(GetInverseCombinedMatrix())
    end

end