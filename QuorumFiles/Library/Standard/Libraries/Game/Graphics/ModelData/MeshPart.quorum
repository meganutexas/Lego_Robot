package Libraries.Game.Graphics.ModelData

/* Java imports:
import com.badlogic.gdx.graphics.GL20;
import com.badlogic.gdx.graphics.Mesh;
import com.badlogic.gdx.graphics.g3d.Model;
*/

use Libraries.Game.Graphics.Mesh

class MeshPart 
    public text id = ""

    // primitiveType defaults to GL_TRIANGLE_STRIP
    public integer primitiveType = 5

    public integer indexOffset = 0

    public integer verticesCount = 0

    public Mesh mesh = undefined

    action Set(MeshPart other)
        id = other:id
        mesh = other:mesh
        indexOffset = other:indexOffset
        verticesCount = other:verticesCount
        primitiveType = other:primitiveType
    end

    action Set(text id, Mesh mesh, integer offset, integer size, integer type)
        me:id = id
        me:mesh = mesh
        me:indexOffset = offset
        me:verticesCount = size
        me:primitiveType = type
    end

    /*

	/** Compares this MeshPart to the specified MeshPart and returns true if they both reference the same {@link Mesh} and the
	 * {@link #indexOffset}, {@link #numVertices} and {@link #primitiveType} members are equal. The {@link #id} member is ignored.
	 * @param other The other MeshPart to compare this MeshPart to.
	 * @return True when this MeshPart equals the other MeshPart (ignoring the {@link #id} member), false otherwise. *-
	public boolean equals (final MeshPart other) {
		return other == this
			|| (other != null && other.mesh == mesh && other.primitiveType == primitiveType && other.indexOffset == indexOffset && other.numVertices == numVertices);
	}

	@Override
	public boolean equals (final Object arg0) {
		if (arg0 == null) return false;
		if (arg0 == this) return true;
		if (!(arg0 instanceof MeshPart)) return false;
		return equals((MeshPart)arg0);
	}*/
end