package Libraries.Game

use Libraries.Interface.Item2D

/*
    The InputMonitor class can be used to test the state of the keyboard or
    mouse at any time. This will poll the input for its status.

    Attribute: Example

        use Libraries.Game.InputMonitor
        use Libraries.Game.Game
        use Libraries.Interface.Events.KeyboardEvent

        class Main is Game

            InputMonitor monitor
            KeyboardEvent keys

            action Main
                StartGame()
            end

            action Update(number time)
                if monitor:IsKeyPressed(keys:SPACE)
                    output "The space bar is pressed!"
                end
            end

        end
*/
class InputMonitor

    /*
    This action will test if the given key is currently pressed down on the
    keyboard. To select which key to test, use the constants from the 
    KeyboardEvent class.

    Attribute: Example

        use Libraries.Game.InputMonitor
        use Libraries.Game.Game
        use Libraries.Interface.Events.KeyboardEvent

        class Main is Game

            InputMonitor monitor
            KeyboardEvent keys

            action Main
                StartGame()
            end

            action Update(number time)
                if monitor:IsKeyPressed(keys:SPACE)
                    output "The space bar is pressed!"
                end
            end

        end
    */
    system action IsKeyPressed(integer keyCode) returns boolean

    /* 
    This will test if a particular button is pressed on the mouse. Use the
    constants from the MouseEvent class to test the buttons. 

    Attribute: Example

        use Libraries.Game.InputMonitor
        use Libraries.Game.Game
        use Libraries.Interface.Events.MouseEvent

        class Main is Game

            InputMonitor monitor
            MouseEvent mouseButtons

            action Main
                StartGame()
            end

            action Update(number time)
                if monitor:IsMouseButtonPressed(mouseButtons:LEFT)
                    output "The left mouse button is pressed!"
                end
            end

        end
    */
    system action IsMouseButtonPressed(integer buttonCode) returns boolean

    /* 
    Returns the X coordinate of the mouse's location on the screen. 
    
    Attribute: Example

        use Libraries.Game.InputMonitor
        use Libraries.Game.Game
        use Libraries.Interface.Events.MouseEvent

        class Main is Game

            InputMonitor monitor
            MouseEvent mouseButtons

            action Main
                StartGame()
            end

            action Update(number time)
                if monitor:IsMouseButtonPressed(mouseButtons:LEFT)
                    output "The mouse X coordinate is at " + monitor:GetMouseX()
                end
            end

        end
    */
    system action GetMouseX returns integer

    /* 
    Returns the Y coordinate of the mouse's location on the screen. 

    Attribute: Example

        use Libraries.Game.InputMonitor
        use Libraries.Game.Game
        use Libraries.Interface.Events.MouseEvent

        class Main is Game

            InputMonitor monitor
            MouseEvent mouseButtons

            action Main
                StartGame()
            end

            action Update(number time)
                if monitor:IsMouseButtonPressed(mouseButtons:LEFT)
                    output "The mouse Y coordinate is at " + monitor:GetMouseY()
                end
            end

        end
    */
    system action GetMouseY returns integer

    /* 
    Returns true if the left, right, or middle mouse button are held down.

    Attribute: Example

        use Libraries.Game.InputMonitor
        use Libraries.Game.Game

        class Main is Game

            InputMonitor monitor

            action Main
                StartGame()
            end

            action Update(number time)
                if monitor:IsClicked()
                    output "A mouse button is held down!"
                end
            end

        end
    */
    system action IsClicked returns boolean

    /* 
    Checks if the mouse scroll wheel has been moved. If the wheel is scrolled
    up, the integer will be positive. If it has been scrolled down, it will be
    negative. 

    Attribute: Example

        use Libraries.Game.InputMonitor
        use Libraries.Game.Game

        class Main is Game

            InputMonitor monitor

            action Main
                StartGame()
            end

            action Update(number time)
                integer scrollAmount = monitor:IsScrolled()
                if scrollAmount not= 0
                    output "The scroll bar moved " + scrollAmount + " units!"
                end
            end

        end
    */
    system action IsScrolled returns integer

    /*
    This action will test to see if the given Item is being clicked.

    Attribute: Example

        use Libraries.Game.InputMonitor
        use Libraries.Game.Game
        use Libraries.Interface.Item

        class Main is Game

            InputMonitor monitor
            Item item

            action Main
                StartGame()
            end

            action CreateGame
                item:SetPosition(100, 100)
                item:SetWidth(300)
                item:SetHeight(300)
            end

            action Update(number time)
                if ItemIsClicked(item)
                    output "The item is clicked!"
                end
            end

        end
    */
    action ItemIsClicked(Item2D item) returns boolean
        
        if IsClicked()
            if GetMouseX() >= item:GetGlobalX() and GetMouseX() <= (item:GetGlobalX() + item:GetWidth())
                if GetMouseY() >= item:GetGlobalY() and GetMouseY() <= item:GetGlobalY() + item:GetHeight()
                    return true
                end
            end
        end

        return false
    end

    /*
    This action will test to see if the given Item was clicked on the last frame
    using the given button. To choose the button value, use the constants from
    the MouseEvent class.

    Attribute: Example

        use Libraries.Game.InputMonitor
        use Libraries.Game.Game
        use Libraries.Interface.Item
        use Libraries.Interface.Events.MouseEvent

        class Main is Game

            InputMonitor monitor
            Item item
            MouseEvent mouseButtons

            action Main
                StartGame()
            end

            action CreateGame
                item:SetPosition(100, 100)
                item:SetWidth(300)
                item:SetHeight(300)
            end

            action Update(number time)
                if ItemIsClicked(item, mouseButtons:LEFT)
                    output "The item is clicked with the left mouse button!"
                end
            end

        end
    */
    action ItemIsClicked(Item2D item, integer button) returns boolean
        
        if IsMouseButtonPressed(button)
            if GetMouseX() >= item:GetGlobalX() and GetMouseX() <= (item:GetGlobalX() + item:GetWidth())
                if GetMouseY() >= item:GetGlobalY() and GetMouseY() <= item:GetGlobalY() + item:GetHeight()
                    return true
                end
            end
        end

        return false
    end

end