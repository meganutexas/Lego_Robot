package Libraries.Game

class AndroidConfiguration is ApplicationConfiguration

    /*
    Number of samples to use for CSAA/MSAA. 2 is a good value.
    */
    public integer samplesCount = 0

    /*
    Whether or not to use the accelerometer for the game. Default value is false.
    */
    public boolean useAccelerometer = false

    /*
    Whether or not to use the compass for the game. Default value is false.
    */
    public boolean useCompass = false

    /*
    The time in milliseconds to delay after each touch event before registering
    more touch events. For Android devices before Android 2.0, a value of 16 is
    useful for preventing a flood of touch events.
    */
    public integer touchSleepTime = 0

    /*
    Whether or not to prevent the screen from dimming due to inactivity. The
    default value is true.
    */
    public boolean preventScreenDimming = true

    /*
    Whether or not to hide status bar buttons on Android 4.0 and higher.
    Default value is false.
    */
    public boolean hideStatusBar = false

    /*
    Whether or not to disable Android audio support. Default value is false.
    */
    public boolean disableAudio = false

    /*
    The maximum number of sounds that can be played simultaneously. The default
    value is 16.
    */
    public integer maxSimultaneousSounds = 16

    /*
    How wide the engine should try to make the display. If the value is 0, the
    entire width of the physical screen will be used. Otherwise, if
    useAspectRatio is true, the display will fill the screen as much as possible
    while maintaining the ratio of targetWidth/targetHeight. If useAspectRatio
    is false, the engine will try to make the display the exact target width, if
    possible. Users may want to use the SetDisplayTo actions for convenience.
    */
    public integer targetWidth = 0

    /*
    How tall the engine should try to make the display. If the value is 0, the
    entire height of the physical screen will be used. Otherwise, if
    useAspectRatio is true, the display will fill the screen as much as possible
    while maintaining the ratio of targetWidth/targetHeight. If useAspectRatio
    is false, the engine will try to make the display the exact target height, if
    possible. Users may want to use the SetDisplayTo actions for convenience.
    */
    public integer targetHeight = 0

    /*
    If useAspectRatio is true, the engine will try to set the display to use
    the largest possible display of the aspect ratio given 
    (targetWidth/targetHeight).
    */
    public boolean useAspectRatio = true

    /*
    TO DO: Implement other resolution strategies. For now, we will default to
    Fill.

    /** the {@link ResolutionStrategy}. default: {@link FillResolutionStrategy} **
	public ResolutionStrategy resolutionStrategy = new FillResolutionStrategy();

	/** if the app is a livewallpaper, whether it should get full touch events **
	public boolean getTouchEventsForLiveWallpaper = false;
    */

    /*
    Whether or not to use Android 4.4 KitKat's "Immersive mode'. Default value
    is false.
    */
    public boolean useImmersiveMode = false

    /*
    /** whether to use {@link com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18} in place of the classic
	 * {@link com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20} on Android API 10 and lower.
	 * In case this is true {@link com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18} will be used.
	 * This implementation properly supports attach to and detach from window. default: false 
	public boolean useGLSurfaceView20API18 = false;
    */

    /*
    This action will set the game display to fill the entire screen of the 
    device. This is the default screen display mode.
    */
    action SetScreenToFill
        targetWidth = 0
        targetHeight = 0
        useAspectRatio = false
    end

    /*
    This action will set the game display to fill the screen as much as possible
    while maintaining the given aspect ratio, where the aspect ratio is the 
    given width divided by the given height.
    */
    action SetScreenToAspectRatio(integer width, integer height)
        targetWidth = width
        targetHeight = height
        useAspectRatio = true
    end
    
    /*
    This action will set the game display to appear in the center of the screen
    with the given width and height.
    */
    action SetScreenToSize(integer width, integer height)
        targetWidth = width
        targetHeight = height
    end

end